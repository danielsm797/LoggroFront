{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DateTime } from 'luxon';\nexport let ListComponent = class ListComponent {\n  //#endregion\n  //#region Constructors\n  constructor(conversionApiService) {\n    this.conversionApiService = conversionApiService;\n    this.images = [];\n    this.loading = false;\n    this.#init();\n  }\n  get startDate() {\n    return this.frmList.controls['startDate'].value;\n  }\n  get endDate() {\n    return this.frmList.controls['endDate'].value;\n  }\n  //#endregion\n  //#region Methods\n  #init() {\n    this.frmList = new FormGroup({\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('', [Validators.required])\n    });\n  }\n  #search() {\n    this.images = [];\n    this.loading = true;\n    this.conversionApiService.search(this.startDate, this.endDate).then(val => {\n      const {\n        success,\n        object\n      } = val;\n      if (!success) {\n        // TODO: Mostrar mensaje\n        return;\n      }\n      object.forEach(x => x.createdAt = DateTime.fromISO(x.createdAt).toLocal().toFormat('yyyy/LL/dd HH:mm:ss'));\n      this.images = object;\n    }).catch(err => {\n      // TODO: Mostrar mensaje\n      console.log('err :>> ', err);\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n  validateForm() {\n    if (this.frmList.invalid) {\n      return this.frmList.markAllAsTouched();\n    }\n    this.#search();\n  }\n};\nListComponent = __decorate([Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})], ListComponent);","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","DateTime","ListComponent","constructor","conversionApiService","images","loading","init","startDate","frmList","controls","value","endDate","#init","required","search","#search","then","val","success","object","forEach","x","createdAt","fromISO","toLocal","toFormat","catch","err","console","log","finally","validateForm","invalid","markAllAsTouched","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\M1503\\Documents\\PROYECTOS\\LoggroFront\\src\\app\\components\\list\\list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ConversionApiService } from '../../services/conversion-api.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GlobalResponse, SearchResponse } from 'src/app/utils/types';\nimport { DateTime } from 'luxon'\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent {\n\n  //#region Properties\n\n  frmList!: FormGroup\n\n  images: SearchResponse[] = []\n\n  loading = false\n\n  //#endregion\n\n  //#region Constructors\n\n  constructor(\n    private conversionApiService: ConversionApiService\n  ) {\n\n    this.#init()\n  }\n\n  get startDate() { return this.frmList.controls['startDate'].value }\n  get endDate() { return this.frmList.controls['endDate'].value }\n\n  //#endregion\n\n  //#region Methods\n\n  #init() {\n\n    this.frmList = new FormGroup({\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('', [Validators.required]),\n    })\n  }\n\n  #search() {\n\n    this.images = []\n\n    this.loading = true\n\n    this.conversionApiService\n      .search(this.startDate, this.endDate)\n      .then((val: GlobalResponse<SearchResponse[]>) => {\n\n        const { success, object } = val\n\n        if (!success) {\n          // TODO: Mostrar mensaje\n          return\n        }\n\n        object\n          .forEach(x => x.createdAt = DateTime.fromISO(x.createdAt).toLocal().toFormat('yyyy/LL/dd HH:mm:ss'))\n\n        this.images = object\n      })\n      .catch(err => {\n        // TODO: Mostrar mensaje\n        console.log('err :>> ', err);\n      })\n      .finally(() => {\n\n        this.loading = false\n      })\n  }\n\n  validateForm() {\n\n    if (this.frmList.invalid) {\n      return this.frmList.markAllAsTouched()\n    }\n\n    this.#search()\n  }\n\n  //#endregion\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,QAAQ,QAAQ,OAAO;AAOzB,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAUxB;EAEA;EAEAC,YACUC,oBAA0C;IAA1C,KAAAA,oBAAoB,GAApBA,oBAAoB;IAT9B,KAAAC,MAAM,GAAqB,EAAE;IAE7B,KAAAC,OAAO,GAAG,KAAK;IAUb,IAAI,CAAC,CAAAC,IAAK,EAAE;EACd;EAEA,IAAIC,SAASA,CAAA;IAAK,OAAO,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC,WAAW,CAAC,CAACC,KAAK;EAAC;EAClE,IAAIC,OAAOA,CAAA;IAAK,OAAO,IAAI,CAACH,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,CAACC,KAAK;EAAC;EAE9D;EAEA;EAEA,CAAAJ,IAAKM,CAAA;IAEH,IAAI,CAACJ,OAAO,GAAG,IAAIX,SAAS,CAAC;MAC3BU,SAAS,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACc,QAAQ,CAAC,CAAC;MACrDF,OAAO,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACc,QAAQ,CAAC;KACnD,CAAC;EACJ;EAEA,CAAAC,MAAOC,CAAA;IAEL,IAAI,CAACX,MAAM,GAAG,EAAE;IAEhB,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACF,oBAAoB,CACtBW,MAAM,CAAC,IAAI,CAACP,SAAS,EAAE,IAAI,CAACI,OAAO,CAAC,CACpCK,IAAI,CAAEC,GAAqC,IAAI;MAE9C,MAAM;QAAEC,OAAO;QAAEC;MAAM,CAAE,GAAGF,GAAG;MAE/B,IAAI,CAACC,OAAO,EAAE;QACZ;QACA;;MAGFC,MAAM,CACHC,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,GAAGtB,QAAQ,CAACuB,OAAO,CAACF,CAAC,CAACC,SAAS,CAAC,CAACE,OAAO,EAAE,CAACC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;MAEtG,IAAI,CAACrB,MAAM,GAAGe,MAAM;IACtB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,IAAG;MACX;MACAC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC;IAC9B,CAAC,CAAC,CACDG,OAAO,CAAC,MAAK;MAEZ,IAAI,CAACzB,OAAO,GAAG,KAAK;IACtB,CAAC,CAAC;EACN;EAEA0B,YAAYA,CAAA;IAEV,IAAI,IAAI,CAACvB,OAAO,CAACwB,OAAO,EAAE;MACxB,OAAO,IAAI,CAACxB,OAAO,CAACyB,gBAAgB,EAAE;;IAGxC,IAAI,CAAC,CAAAnB,MAAO,EAAE;EAChB;CAGD;AA9EYb,aAAa,GAAAiC,UAAA,EALzBtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWpC,aAAa,CA8EzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}