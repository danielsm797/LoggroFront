{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/conversion-api.service\";\nexport class ListComponent {\n  //#endregion\n  //#region Constructors\n  constructor(conversionApiService) {\n    this.conversionApiService = conversionApiService;\n    this.#init();\n  }\n  //#endregion\n  //#region Methods\n  #init() {\n    this.frmList = new FormGroup({\n      startDate: new FormControl('', [Validator.required])\n    });\n  }\n  #search() {\n    this.conversionApiService.search('', '').then(val => {\n      console.log('val :>> ', val);\n    }).catch(err => {\n      console.log('err :>> ', err);\n    }).finally(() => {});\n  }\n  static #_ = this.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.ConversionApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"app-list\"]],\n    decls: 2,\n    vars: 0,\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"list works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","ListComponent","constructor","conversionApiService","init","#init","frmList","startDate","Validator","required","search","#search","then","val","console","log","catch","err","finally","_","i0","ɵɵdirectiveInject","i1","ConversionApiService","_2","selectors","decls","vars","template","ListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\M1503\\Documents\\PROYECTOS\\LoggroFront\\src\\app\\components\\list\\list.component.ts","C:\\Users\\M1503\\Documents\\PROYECTOS\\LoggroFront\\src\\app\\components\\list\\list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ConversionApiService } from '../../services/conversion-api.service';\nimport { FormGroup, FormControl, Validator } from '@angular/forms';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent {\n\n  //#region Properties\n\n  frmList!: FormGroup\n\n  //#endregion\n\n  //#region Constructors\n\n  constructor(\n    private conversionApiService: ConversionApiService\n  ) {\n\n    this.#init()\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  #init() {\n\n    this.frmList = new FormGroup({\n      startDate: new FormControl('', [Validator.required])\n    })\n  }\n\n  #search() {\n\n    this.conversionApiService\n      .search('', '')\n      .then(val => {\n        console.log('val :>> ', val);\n      })\n      .catch(err => {\n        console.log('err :>> ', err);\n      })\n      .finally(() => {\n\n      })\n  }\n\n  //#endregion\n}\n","<p>list works!</p>\n"],"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,QAAmB,gBAAgB;;;AAOlE,OAAM,MAAOC,aAAa;EAMxB;EAEA;EAEAC,YACUC,oBAA0C;IAA1C,KAAAA,oBAAoB,GAApBA,oBAAoB;IAG5B,IAAI,CAAC,CAAAC,IAAK,EAAE;EACd;EAEA;EAEA;EAEA,CAAAA,IAAKC,CAAA;IAEH,IAAI,CAACC,OAAO,GAAG,IAAIP,SAAS,CAAC;MAC3BQ,SAAS,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACQ,SAAS,CAACC,QAAQ,CAAC;KACpD,CAAC;EACJ;EAEA,CAAAC,MAAOC,CAAA;IAEL,IAAI,CAACR,oBAAoB,CACtBO,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CACdE,IAAI,CAACC,GAAG,IAAG;MACVC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC;IAC9B,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAG;MACXH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,GAAG,CAAC;IAC9B,CAAC,CAAC,CACDC,OAAO,CAAC,MAAK,CAEd,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAzCUlB,aAAa,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbvB,aAAa;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT1BV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,kBAAW;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}